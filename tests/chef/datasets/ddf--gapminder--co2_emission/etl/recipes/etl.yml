info:
    id: ddf--gapminder--co2_emission
    base:
        - &d1 ddf--cdiac--co2
        - &d2 ddf--gapminder--population
        - &d3 ddf--gapminder--geo_entity_domain
        - &d4 ddf--gapminder--systema_globalis

config:
    ddf_dir: /Users/semio/src/work/Gapminder/
    recipe_dir: ./
    dictionary_dir: ./translation_dictionaries

ingredients:
    - id: cdiac-datapoints
      dataset: *d1
      key: nation, year
      value:
          - total_carbon_emissions
    - id: cdiac-entities
      dataset: *d1
      key: nation
      value: "*"
    - id: gapminder-datapoints
      dataset: *d2
      key: country, year
      value:
        - population
    - id: gapminder-entities
      dataset: *d3
      key: country
      value: "*"
    - id: gapminder-concepts
      dataset: *d4
      key: concept
      value: "*"
      filter:
          concept:
              - yearly_co2_emissions_1000_tonnes
              - cumulative_co2_emissions_tonnes
              - co2_emissions_tonnes_per_person

cooking:
    datapoints:
        # merge / split countries
        - procedure: merge_entity
          ingredients:
              - cdiac-datapoints
          options:
              dictionary: country_merge.json
              merged: keep
              target_column: nation
          result: cdiac-datapoints-country-merged

        - procedure: split_entity
          ingredients:
              - cdiac-datapoints-country-merged
          options:
              dictionary: country_split.json
              splitted: keep
              target_column: nation
              debug: true
          result: cdiac-datapoints-country-merged-splitted

        # adapt to Gapminder's geo
        - procedure: translate_column
          ingredients:
              - cdiac-entities
          options:
              column: name
              target_column: geo
              dictionary:
                  key: ['name', 'gapminder_list','alternative_1', 'alternative_2', 'alternative_3',
                        'alternative_4_cdiac', 'pandg', 'god_id', 'alt_5', 'upper_case_name', 'arb1', 
                        'arb2', 'arb3', 'arb4', 'arb5', 'arb6'] 
                  value: country
                  base: gapminder-entities
              not_found: drop
              ignore_case: true
              debug: true
          result: geo-entities-aligned

        - procedure: translate_column
          ingredients:
              - cdiac-datapoints-country-merged-splitted
          options:
              column: nation
              target_column: nation
              dictionary:
                  key: nation
                  value: geo
                  base: geo-entities-aligned
              not_found: drop
              debug: true
          result: cdiac-datapoints-aligned

        - procedure: translate_header
          ingredients:
              - cdiac-datapoints-aligned
          options:
              dictionary:
                  nation: country
          result: cdiac-datapoints-translated

        - procedure: run_op
          ingredients:
              - cdiac-datapoints-translated
          options:
              op:
                  yearly_co2_emissions_1000_tonnes: total_carbon_emissions * 3.667
              debug: true
          result: total_emissions-datapoints

        # create a new ingredient with co2 and population in it.
        - procedure: merge 
          ingredients:
              - total_emissions-datapoints
              - gapminder-datapoints
          result: co2-and-pop-datapoints

        - procedure: run_op
          ingredients:
              - co2-and-pop-datapoints
          options:
              op:
                  co2_emissions_tonnes_per_person: yearly_co2_emissions_1000_tonnes / population * 1000
          result: co2_per_cap-datapoints

        - procedure: window
          ingredients:
              - total_emissions-datapoints
          options:
              window:
                  size: expanding
                  column: year
              aggregate:
                  yearly_co2_emissions_1000_tonnes: sum

          result: total_emission_cumsum-datapoints

        - procedure: run_op
          ingredients:
              - total_emission_cumsum-datapoints
          options:
              op:
                  cumulative_co2_emissions_tonnes: yearly_co2_emissions_1000_tonnes * 1000
          result: total_emission_cumsum-datapoints-final

        - procedure: merge
          ingredients:
              - total_emission_cumsum-datapoints-final
              - co2_per_cap-datapoints
              - total_emissions-datapoints
          result: datapoints_all
        - procedure: filter
          ingredients:
              - datapoints_all
          options:
              item:
                  - yearly_co2_emissions_1000_tonnes
                  - cumulative_co2_emissions_tonnes
                  - co2_emissions_tonnes_per_person
          result: datapoints-to-serve

        - procedure: serve
          ingredients:
              - datapoints-to-serve

    entities:
        - procedure: serve
          ingredients:
              - gapminder-entities
          options:
            no_keep_sets: true

    concepts:
        - procedure: extract_concepts
          ingredients:
              - datapoints-to-serve
              - gapminder-entities
          result: concepts_extracted
        - procedure: merge
          ingredients:
              - concepts_extracted
              - gapminder-concepts
          options:
              deep: true
          result: concepts-to-serve
        - procedure: serve
          ingredients:
              - concepts-to-serve

